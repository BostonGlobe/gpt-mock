{
  "type": "Program",
  "body": [
    {
      "type": "ExportNamedDeclaration",
      "declaration": {
        "type": "FunctionDeclaration",
        "id": {
          "type": "Identifier",
          "name": "isNamedSize",
          "range": [
            691,
            702
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 16
            },
            "end": {
              "line": 21,
              "column": 27
            }
          }
        },
        "params": [
          {
            "type": "Identifier",
            "name": "obj",
            "range": [
              703,
              706
            ],
            "loc": {
              "start": {
                "line": 21,
                "column": 28
              },
              "end": {
                "line": 21,
                "column": 31
              }
            }
          }
        ],
        "body": {
          "type": "BlockStatement",
          "body": [
            {
              "type": "ReturnStatement",
              "argument": {
                "type": "BinaryExpression",
                "operator": "===",
                "left": {
                  "type": "Identifier",
                  "name": "obj",
                  "range": [
                    719,
                    722
                  ],
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 9
                    },
                    "end": {
                      "line": 22,
                      "column": 12
                    }
                  }
                },
                "right": {
                  "type": "Literal",
                  "value": "fluid",
                  "raw": "'fluid'",
                  "range": [
                    727,
                    734
                  ],
                  "loc": {
                    "start": {
                      "line": 22,
                      "column": 17
                    },
                    "end": {
                      "line": 22,
                      "column": 24
                    }
                  }
                },
                "range": [
                  719,
                  734
                ],
                "loc": {
                  "start": {
                    "line": 22,
                    "column": 9
                  },
                  "end": {
                    "line": 22,
                    "column": 24
                  }
                }
              },
              "range": [
                712,
                735
              ],
              "loc": {
                "start": {
                  "line": 22,
                  "column": 2
                },
                "end": {
                  "line": 22,
                  "column": 25
                }
              }
            }
          ],
          "range": [
            708,
            737
          ],
          "loc": {
            "start": {
              "line": 21,
              "column": 33
            },
            "end": {
              "line": 23,
              "column": 1
            }
          }
        },
        "generator": false,
        "expression": false,
        "range": [
          682,
          737
        ],
        "loc": {
          "start": {
            "line": 21,
            "column": 7
          },
          "end": {
            "line": 23,
            "column": 1
          }
        },
        "leadingComments": [
          {
            "type": "Block",
            "value": "*\n * Named sizes that a slot can have. In most cases size is a fixed-size rectangle\n * but there are some cases when we need other kinds of size specifications.\n *\n * Only the following are valid named sizes:\n * * 'fluid': the ad container takes 100% width of parent div and then resizes\n *   its height to fit creative content. Similar to how regular block elements\n *   on a page behave. Used for native ads (see related article\n *   https://support.google.com/dfp_premium/answer/6366905).\n *\n * @typedef {string} NamedSize\n * @private\n ",
            "range": [
              0,
              543
            ],
            "loc": {
              "start": {
                "line": 1,
                "column": 0
              },
              "end": {
                "line": 13,
                "column": 3
              }
            }
          },
          {
            "type": "Block",
            "value": "*\n * Returns true if the given object is a {@link NamedSize}.\n *\n * @private\n * @param {NamedSize|*} obj The object to test\n ",
            "range": [
              545,
              674
            ],
            "loc": {
              "start": {
                "line": 15,
                "column": 0
              },
              "end": {
                "line": 20,
                "column": 3
              }
            }
          }
        ],
        "trailingComments": []
      },
      "specifiers": [],
      "source": null,
      "range": [
        675,
        737
      ],
      "loc": {
        "start": {
          "line": 21,
          "column": 0
        },
        "end": {
          "line": 23,
          "column": 1
        }
      },
      "leadingComments": [
        {
          "type": "Block",
          "value": "*\n * Named sizes that a slot can have. In most cases size is a fixed-size rectangle\n * but there are some cases when we need other kinds of size specifications.\n *\n * Only the following are valid named sizes:\n * * 'fluid': the ad container takes 100% width of parent div and then resizes\n *   its height to fit creative content. Similar to how regular block elements\n *   on a page behave. Used for native ads (see related article\n *   https://support.google.com/dfp_premium/answer/6366905).\n *\n * @typedef {string} NamedSize\n * @private\n ",
          "range": [
            0,
            543
          ],
          "loc": {
            "start": {
              "line": 1,
              "column": 0
            },
            "end": {
              "line": 13,
              "column": 3
            }
          }
        },
        {
          "type": "Block",
          "value": "*\n * Returns true if the given object is a {@link NamedSize}.\n *\n * @private\n * @param {NamedSize|*} obj The object to test\n ",
          "range": [
            545,
            674
          ],
          "loc": {
            "start": {
              "line": 15,
              "column": 0
            },
            "end": {
              "line": 20,
              "column": 3
            }
          }
        }
      ]
    }
  ],
  "sourceType": "module",
  "range": [
    675,
    737
  ],
  "loc": {
    "start": {
      "line": 21,
      "column": 0
    },
    "end": {
      "line": 23,
      "column": 1
    }
  },
  "comments": [
    {
      "type": "Block",
      "value": "*\n * Named sizes that a slot can have. In most cases size is a fixed-size rectangle\n * but there are some cases when we need other kinds of size specifications.\n *\n * Only the following are valid named sizes:\n * * 'fluid': the ad container takes 100% width of parent div and then resizes\n *   its height to fit creative content. Similar to how regular block elements\n *   on a page behave. Used for native ads (see related article\n *   https://support.google.com/dfp_premium/answer/6366905).\n *\n * @typedef {string} NamedSize\n * @private\n ",
      "range": [
        0,
        543
      ],
      "loc": {
        "start": {
          "line": 1,
          "column": 0
        },
        "end": {
          "line": 13,
          "column": 3
        }
      }
    },
    {
      "type": "Block",
      "value": "*\n * Returns true if the given object is a {@link NamedSize}.\n *\n * @private\n * @param {NamedSize|*} obj The object to test\n ",
      "range": [
        545,
        674
      ],
      "loc": {
        "start": {
          "line": 15,
          "column": 0
        },
        "end": {
          "line": 20,
          "column": 3
        }
      }
    }
  ]
}